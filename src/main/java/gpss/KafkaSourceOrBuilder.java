// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: gpssjob.proto

package gpss;

public interface KafkaSourceOrBuilder extends
    // @@protoc_insertion_point(interface_extends:gpss.KafkaSource)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * kafka topic
   * </pre>
   *
   * <code>string topic = 1;</code>
   * @return The topic.
   */
  java.lang.String getTopic();
  /**
   * <pre>
   * kafka topic
   * </pre>
   *
   * <code>string topic = 1;</code>
   * @return The bytes for topic.
   */
  com.google.protobuf.ByteString
      getTopicBytes();

  /**
   * <pre>
   * the brokers must be separated by comma: brokers1, brokers2 ...
   * </pre>
   *
   * <code>string brokers = 2;</code>
   * @return The brokers.
   */
  java.lang.String getBrokers();
  /**
   * <pre>
   * the brokers must be separated by comma: brokers1, brokers2 ...
   * </pre>
   *
   * <code>string brokers = 2;</code>
   * @return The bytes for brokers.
   */
  com.google.protobuf.ByteString
      getBrokersBytes();

  /**
   * <pre>
   * key data source format
   * </pre>
   *
   * <code>.gpss.SourceDataFormat key_content = 3;</code>
   * @return Whether the keyContent field is set.
   */
  boolean hasKeyContent();
  /**
   * <pre>
   * key data source format
   * </pre>
   *
   * <code>.gpss.SourceDataFormat key_content = 3;</code>
   * @return The keyContent.
   */
  gpss.SourceDataFormat getKeyContent();
  /**
   * <pre>
   * key data source format
   * </pre>
   *
   * <code>.gpss.SourceDataFormat key_content = 3;</code>
   */
  gpss.SourceDataFormatOrBuilder getKeyContentOrBuilder();

  /**
   * <pre>
   * value data source format
   * </pre>
   *
   * <code>.gpss.SourceDataFormat value_content = 4;</code>
   * @return Whether the valueContent field is set.
   */
  boolean hasValueContent();
  /**
   * <pre>
   * value data source format
   * </pre>
   *
   * <code>.gpss.SourceDataFormat value_content = 4;</code>
   * @return The valueContent.
   */
  gpss.SourceDataFormat getValueContent();
  /**
   * <pre>
   * value data source format
   * </pre>
   *
   * <code>.gpss.SourceDataFormat value_content = 4;</code>
   */
  gpss.SourceDataFormatOrBuilder getValueContentOrBuilder();

  /**
   * <pre>
   * source data format
   * </pre>
   *
   * <code>.gpss.SourceDataFormat meta = 5;</code>
   * @return Whether the meta field is set.
   */
  boolean hasMeta();
  /**
   * <pre>
   * source data format
   * </pre>
   *
   * <code>.gpss.SourceDataFormat meta = 5;</code>
   * @return The meta.
   */
  gpss.SourceDataFormat getMeta();
  /**
   * <pre>
   * source data format
   * </pre>
   *
   * <code>.gpss.SourceDataFormat meta = 5;</code>
   */
  gpss.SourceDataFormatOrBuilder getMetaOrBuilder();

  /**
   * <pre>
   * https://github.com/edenhill/librdkafka/blob/master/CONFIGURATION.md
   * </pre>
   *
   * <code>map&lt;string, string&gt; rdkafka_prop = 6;</code>
   */
  int getRdkafkaPropCount();
  /**
   * <pre>
   * https://github.com/edenhill/librdkafka/blob/master/CONFIGURATION.md
   * </pre>
   *
   * <code>map&lt;string, string&gt; rdkafka_prop = 6;</code>
   */
  boolean containsRdkafkaProp(
      java.lang.String key);
  /**
   * Use {@link #getRdkafkaPropMap()} instead.
   */
  @java.lang.Deprecated
  java.util.Map<java.lang.String, java.lang.String>
  getRdkafkaProp();
  /**
   * <pre>
   * https://github.com/edenhill/librdkafka/blob/master/CONFIGURATION.md
   * </pre>
   *
   * <code>map&lt;string, string&gt; rdkafka_prop = 6;</code>
   */
  java.util.Map<java.lang.String, java.lang.String>
  getRdkafkaPropMap();
  /**
   * <pre>
   * https://github.com/edenhill/librdkafka/blob/master/CONFIGURATION.md
   * </pre>
   *
   * <code>map&lt;string, string&gt; rdkafka_prop = 6;</code>
   */

  java.lang.String getRdkafkaPropOrDefault(
      java.lang.String key,
      java.lang.String defaultValue);
  /**
   * <pre>
   * https://github.com/edenhill/librdkafka/blob/master/CONFIGURATION.md
   * </pre>
   *
   * <code>map&lt;string, string&gt; rdkafka_prop = 6;</code>
   */

  java.lang.String getRdkafkaPropOrThrow(
      java.lang.String key);
}
